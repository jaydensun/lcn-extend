group 'com.sf.ground'
version '1.0.3'

apply plugin: 'java'
apply plugin: 'maven'

sourceCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

repositories {
    mavenLocal()
    maven { url property('mavenUrl') }
}

configurations {
    compile.exclude group: 'log4j', module: 'log4j'
    compile.exclude group: 'org.slf4j', module: 'slf4j-simple'
    compile.exclude group: 'org.slf4j', module: 'slf4j-jdk14'
    compile.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    compile.exclude group: 'commons-logging', module: 'commons-logging'
    compile.exclude group: 'ch.qos.logback', module: 'logback-classic'
}

dependencies {
    compile 'com.codingapi:transaction-dubbo:4.1.0'
    compile 'com.codingapi:tx-plugins-db:4.1.0'
    compile 'org.springframework.cloud:spring-cloud-starter-zookeeper-discovery:1.1.1.RELEASE'
    compile 'org.springframework:spring-web:4.3.14.RELEASE'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task initSourceFolders {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
}

uploadArchives.repositories.mavenDeployer {
    repository(url: property('releaseUploadUrl')) {
        authentication(userName: property('releaseUploadUserName'), password: property('releaseUploadPassword'))
    }
    snapshotRepository(url: property('snapshotUploadUrl')) {
        authentication(userName: property('snapshotUploadUserName'), password: property('snapshotUploadPassword'))
    }
}